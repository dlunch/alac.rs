var N = null;var searchIndex = {};
searchIndex["alac"]={"doc":"","items":[[3,"Decoder","alac","An ALAC packet decoder.",N,N],[3,"Packets","","An iterator-like type that decodes packets into a user-provided buffer.",N,N],[3,"Reader","","An ALAC reader and decoder supporting `mp4` and `caf` files (if the respective Cargo features are enabled).",N,N],[3,"Samples","","An iterator that yields samples of type `S` read from a `Reader`.",N,N],[3,"InvalidData","","An error indicating user-provided data is invalid.",N,N],[3,"StreamInfo","","Codec initialisation parameters for an ALAC stream.",N,N],[4,"Format","","The format of an ALAC file.",N,N],[13,"Caf","","",0,N],[13,"Mp4","","",0,N],[4,"ReadError","","An error when reading an ALAC file using a `Reader`.",N,N],[13,"Io","","",1,N],[13,"UnsupportedFormat","","",1,N],[13,"Format","","",1,N],[13,"Decoder","","",1,N],[11,"new","","Creates a `Decoder` for a stream described by the `StreamInfo`.",2,[[["streaminfo"]],["decoder"]]],[11,"stream_info","","Returns the `StreamInfo` used to create this decoder.",2,[[["self"]],["streaminfo"]]],[11,"decode_packet","","Decodes an ALAC packet into `out`.",2,N],[11,"new","","Attempts to create a `Reader` from a seekable byte stream.",3,[[["r"]],["result",["reader","readerror"]]]],[11,"format","","Returns the format of this ALAC file.",3,[[["self"]],["format"]]],[11,"stream_info","","Returns a `StreamInfo` describing the ALAC stream in this file.",3,[[["self"]],["streaminfo"]]],[11,"into_samples","","Returns an iterator over the samples in the ALAC stream.",3,[[["self"]],["samples"]]],[11,"into_packets","","Returns an iterator-like type that decodes packets into a user-provided buffer.",3,[[["self"]],["packets"]]],[11,"format","","Returns the format of this ALAC file.",4,[[["self"]],["format"]]],[11,"stream_info","","Returns a `StreamInfo` describing the ALAC stream in this file.",4,[[["self"]],["streaminfo"]]],[11,"format","","Returns the format of this ALAC file.",5,[[["self"]],["format"]]],[11,"stream_info","","Returns a `StreamInfo` describing the ALAC stream in this file.",5,[[["self"]],["streaminfo"]]],[11,"next_into","","Reads the next packet and decodes it into `out`.",5,N],[8,"Sample","","A type that can be used to represent audio samples.",N,N],[10,"from_decoder","","Constructs `Self` from a right-aligned sample with bit depth `bits`.",6,[[["i32"],["u8"]],["self"]]],[10,"bits","","",6,[[],["u8"]]],[11,"from_cookie","","Creates a `StreamInfo` from a magic cookie. This is often stored in the header of a container format.",7,N],[11,"from_sdp_format_parameters","","Creates a `StreamInfo` from SDP format specific parameters, i.e. the `fmtp` attribute.",7,[[["str"]],["result",["streaminfo","invaliddata"]]]],[11,"sample_rate","","",7,[[["self"]],["u32"]]],[11,"bit_depth","","",7,[[["self"]],["u8"]]],[11,"channels","","",7,[[["self"]],["u8"]]],[11,"max_frames_per_packet","","",7,[[["self"]],["u32"]]],[11,"max_samples_per_packet","","",7,[[["self"]],["u32"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",4,[[["self"]],["option",["result"]]]],[11,"eq","","",0,[[["self"],["format"]],["bool"]]],[11,"eq","","",7,[[["self"],["streaminfo"]],["bool"]]],[11,"ne","","",7,[[["self"],["streaminfo"]],["bool"]]],[11,"from","","",1,[[["caferror"]],["readerror"]]],[11,"from","","",1,[[["error"]],["readerror"]]],[11,"from","","",1,[[["error"]],["readerror"]]],[11,"clone","","",0,[[["self"]],["format"]]],[11,"clone","","",7,[[["self"]],["streaminfo"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"Format"],[4,"ReadError"],[3,"Decoder"],[3,"Reader"],[3,"Samples"],[3,"Packets"],[8,"Sample"],[3,"StreamInfo"],[3,"InvalidData"]]};
initSearch(searchIndex);
